#!/bin/bash

msg() {
    local message

    case $1 in
        -e|--error)
            message="$2"
            echo -e "${RED}ERROR${NC}  $message" >&2
            shift 2
            ;;
        -i|--info)
            message="$2"
            echo -e "${GREEN}INFO${NC}   $message"
            shift 2
            ;;
        *)
            message="$1"
            echo -e "$message"
            shift
            ;;
    esac
}

secure_curl() {
    local URL="$1"
    
    if ! curl --proto '=https' -sSf "$URL"; then
        msg -e "Failed to transfer data from ${YELLOW}$URL${NC}"
        return 1
    fi
}

eval_curl() {
    local URL="$1"

    local data="$(secure_curl "$URL")"
    if ! eval "$data"; then
        msg -e "Failed to evaluate data from ${YELLOW}$URL${NC}"
    fi
}

ROOT_URL="https://raw.githubusercontent.com/skeletony007/charon/main"
BASH_UTILS_URL="https://raw.githubusercontent.com/skeletony007/bash-utils/main"

eval_curl "$ROOT_URL/colors"
eval_curl "$BASH_UTILS_URL/object/object"

abstract_ferry="$(secure_curl "$ROOT_URL/punts/abstract-ferry")"


action=$1

case $action in
    install|uninstall|config)
        shift
        for ferry in "$@"; do
            ferry_data="$(secure_curl "$ROOT_URL/ferries/$ferry")"

            create_object $ferry "$abstract_ferry"
            create_object $ferry "$ferry_data"

            ${ferry}_${action}

            if [ $? -ne 0 ]; then
                msg -e "$action unsuccessful"
            else
                msg -i "$action succeeded"
            fi
        done
    ;;
    --help|-h)
        secure_curl "$ROOT_URL/usage"
    ;;
    *)
        msg -e "Invalid command or missing arguments. Use ${YELLOW}charon --help${NC} for usage instructions."
    ;;
esac

